<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:models="clr-namespace:EditCollection.Models"
                    xmlns:views="clr-namespace:EditCollection.Views">
    <!--Изображение кнопки "Удалить"-->
    <Geometry x:Key="delete">F1 M 16,15L 32,15C 32.5523,15 32.75,17.25 32.75,17.25L 15.25,17.25C 15.25,17.25 15.4477,15 16,15 Z M 22.5,12.5L 25.5,12.5C 25.7761,12.5 26.5,13.2239 26.5,13.5C 26.5,13.7762 25.7761,14.5 25.5,14.5L 22.5,14.5C 22.2238,14.5 21.5,13.7762 21.5,13.5C 21.5,13.2239 22.2238,12.5 22.5,12.5 Z M 17.5,18L 30.5,18C 31.0523,18 31.5,18.4477 31.5,19L 30.5,34C 30.5,34.5523 30.0523,35 29.5,35L 18.5,35C 17.9477,35 17.5,34.5523 17.5,34L 16.5,19C 16.5,18.4477 16.9477,18 17.5,18 Z M 19,20L 19.25,33L 21,33L 20.75,20L 19,20 Z M 23,20L 23,33L 25,33L 25,20L 23,20 Z M 27.25,20L 27,33L 28.75,33L 29,20L 27.25,20 Z</Geometry>
    <!--Изображение кнопки "Редактировать"-->
    <Geometry x:Key="edit">F1 M 26.9999,16.0001L 31.9999,21.0001L 20,33L 15,28L 26.9999,16.0001 Z M 32.9497,19.9999L 28,15.0501L 30.1213,12.9288C 30.9024,12.1477 32.1687,12.1477 32.9498,12.9288L 35.0711,15.0501C 35.8521,15.8312 35.8521,17.0975 35.0711,17.8785L 32.9497,19.9999 Z M 13.75,34.7499L 13.25,34.2499L 14.5625,30.0624L 17.9376,33.4374L 13.75,34.7499 Z</Geometry>
    <!--Изображение кнопки "Закрыть"-->
    <Geometry x:Key="close">F1 M 17,14L 24,21L 30.9999,14.0001L 33.9999,17.0001L 27,24L 33.9999,31L 31,34L 24,27L 17,34L 14,31L 21,24L 14,17L 17,14 Z</Geometry>
    <!--Прозрачность кнопок без фокуса-->
    <sys:Double x:Key="InactiveButtonOpacity">0.5</sys:Double>
    <!--Масштаб кнопок по умолчанию-->
    <sys:Double x:Key="DefaultScale">0.7</sys:Double>
    <!--Длительность затухания-->
    <Duration x:Key="FadingDuration">0:0:0.5</Duration>

    <!--Шаблон для кнопки. Без подсветки при наведении-->
    <ControlTemplate x:Key="PathButton"
                     TargetType="ButtonBase">
        <Border BorderThickness="0"
                BorderBrush="{TemplateBinding Border.BorderBrush}"
                Opacity="{StaticResource InactiveButtonOpacity}"
                Background="Transparent"
                Name="border"
                SnapsToDevicePixels="True">
            <ContentPresenter RecognizesAccessKey="True"
                              Content="{TemplateBinding ContentControl.Content}"
                              ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                              ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                              Name="contentPresenter"
                              Margin="{TemplateBinding Control.Padding}"
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                              Focusable="False" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted">
                <Setter Property="Border.BorderBrush"
                        TargetName="border">
                    <Setter.Value>
                        <DynamicResource ResourceKey="{x:Static SystemColors.HighlightBrushKey}" />
                    </Setter.Value>
                </Setter>
                <Trigger.Value>
                    <sys:Boolean>True</sys:Boolean>
                </Trigger.Value>
            </Trigger>
            <!--Эффекты при наведении-->
            <Trigger Property="UIElement.IsMouseOver"
                     Value="True">
                <Setter Property="Effect">
                    <Setter.Value>
                        <!--Тень-->
                        <DropShadowEffect BlurRadius="2"
                                          Color="DarkGray"
                                          ShadowDepth="3" />
                    </Setter.Value>
                </Setter>
                <Trigger.EnterActions>
                    <!--Проявление при наведении курсора-->
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="border"
                                             To="1"
                                             Duration="{StaticResource FadingDuration}" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <!--Затухание при уходе курсора-->
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="border"
                                             To="{StaticResource InactiveButtonOpacity}"
                                             Duration="{StaticResource FadingDuration}" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <!--Стиль панели с кнопками редактирования-->
    <Style x:Key="ButtonPanelStyle"
           BasedOn="{StaticResource {x:Type StackPanel}}">
        <Setter Property="Control.Opacity"
                Value="0" />
        <Setter Property="FrameworkElement.VerticalAlignment"
                Value="Bottom" />
        <Setter Property="StackPanel.Orientation"
                Value="Horizontal" />
        <Setter Property="FrameworkElement.HorizontalAlignment"
                Value="Right" />
        <Setter Property="FrameworkElement.Cursor"
                Value="Hand" />
        <Setter Property="FrameworkElement.Margin"
                Value="0,0,10,10" />
        <Setter Property="Control.LayoutTransform">
            <Setter.Value>
                <ScaleTransform CenterX="1"
                                CenterY="1"
                                ScaleX="{StaticResource DefaultScale}"
                                ScaleY="{StaticResource DefaultScale}" />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}, Path=IsMouseOver}"
                         Value="True">
            <!--Триггер входа курсора на элемент списка-->
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                             To="1"
                                             Duration="{StaticResource FadingDuration}" />
                            <DoubleAnimation Storyboard.TargetProperty="(Control.LayoutTransform).(ScaleTransform.ScaleX)"
                                             To="1"
                                             Duration="{StaticResource FadingDuration}" />
                            <DoubleAnimation Storyboard.TargetProperty="(Control.LayoutTransform).(ScaleTransform.ScaleY)"
                                             To="1"
                                             Duration="{StaticResource FadingDuration}" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <!--Триггер выхода курсора из элемент списка-->
                <DataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                             To="0"
                                             Duration="{StaticResource FadingDuration}" />
                            <DoubleAnimation Storyboard.TargetProperty="(Control.LayoutTransform).(ScaleTransform.ScaleX)"
                                             To="{StaticResource DefaultScale}"
                                             Duration="{StaticResource FadingDuration}" />
                            <DoubleAnimation Storyboard.TargetProperty="(Control.LayoutTransform).(ScaleTransform.ScaleY)"
                                             To="{StaticResource DefaultScale}"
                                             Duration="{StaticResource FadingDuration}" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--Шаблон элемента списка в обычном режиме-->
    <DataTemplate x:Key="OperationViewTemplate"
                  DataType="{x:Type models:OperationView}">
        <Grid>
            <Grid ShowGridLines="True">
                <Grid.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="VerticalAlignment"
                                Value="Center" />
                        <Setter Property="Margin"
                                Value="3"></Setter>
                    </Style>
                    <Style TargetType="Label">
                        <Setter Property="HorizontalAlignment"
                                Value="Left" />
                        <Setter Property="Margin"
                                Value="5" />
                    </Style>
                </Grid.Resources>
                
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <!--Элементы управления, привязанные к свойства объекта-->
                <CheckBox IsChecked="{Binding IsActive}"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Top" />
                <TextBlock Text="{Binding ViewName}"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           TextAlignment="Center"
                           FontSize="25"
                           Grid.ColumnSpan="2" />
                <Label Grid.Row="1"
                       Grid.Column="0">Владелец:</Label>
                <TextBlock Text="{Binding Owner}"
                           Grid.Row="1"
                           Grid.Column="1"></TextBlock>
                <Label Grid.Row="2"
                       Grid.Column="0">Отдел:</Label>
                <TextBlock Text="{Binding Department}"
                           Grid.Row="2"
                           Grid.Column="1"></TextBlock>
                <TextBlock Text="{Binding Description}"
                           Grid.Row="3"
                           Grid.Column="0"
                           Grid.ColumnSpan="2"></TextBlock>
                <TextBlock Text="{Binding  Alarms}"
                           Foreground="Red"
                           FontWeight="Bold"
                           Grid.Row="4"
                           Grid.Column="0"
                           Grid.ColumnSpan="2" />
            </Grid>
            <!--Кнопки редактирования-->
            <StackPanel x:Name="EditButtons"
                        Style="{StaticResource ButtonPanelStyle}">
                <Button Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type views:CollectionViewer}}, Path=EnterEditModeCommand}"
                        Template="{StaticResource PathButton}">
                    <Path Data="{StaticResource edit }"
                          Stroke="Black" />
                </Button>
                <Button Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type views:CollectionViewer}}, Path=DeleteCommand}"
                        CommandParameter="{Binding}"
                        Template="{StaticResource PathButton}">
                    <Path Data="{StaticResource delete }"
                          Stroke="Red" />
                </Button>
            </StackPanel>
        </Grid>
    </DataTemplate>

    <!--Шаблон элемента в режиме редактирования-->
    <DataTemplate x:Key="OperationViewTemplateEditMode"
                  DataType="{x:Type models:OperationView}">
        <Grid>
            <Grid ShowGridLines="True">
                <Grid.Resources>
                    <Style TargetType="Control">
                        <Setter Property="IsEnabled"
                                Value="False" />
                    </Style>
                    <Style TargetType="CheckBox">
                        <Setter Property="IsEnabled"
                                Value="True" />
                    </Style>
                </Grid.Resources>
                
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <!--Элементы управления, привязанные к свойства объекта-->
                <CheckBox IsChecked="{Binding IsActive}"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Top" />
                <TextBox Text="{Binding ViewName}"
                         HorizontalAlignment="Center"
                         VerticalAlignment="Center"
                         TextAlignment="Center"
                         Grid.ColumnSpan="2" />
                <Label Grid.Row="1"
                       Grid.Column="0">Владелец:</Label>
                <TextBox Text="{Binding Owner}"
                         Grid.Row="1"
                         Grid.Column="1"></TextBox>
                <Label Grid.Row="2"
                       Grid.Column="0">Отдел:</Label>
                <TextBox Text="{Binding Department}"
                         Grid.Row="2"
                         Grid.Column="1" />
                <TextBox Text="{Binding Description}"
                         Grid.Row="3"
                         Grid.Column="0"
                         Grid.ColumnSpan="2"
                         AcceptsReturn="True"
                         TextWrapping="Wrap" />
                <TextBox Text="{Binding  Alarms}"
                         Grid.Row="4"
                         Grid.Column="0"
                         Grid.ColumnSpan="2" />
            </Grid>
            <!--Кнопка закрытия режима редактирования-->
            <StackPanel Style="{StaticResource ButtonPanelStyle}">
                <Button Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type views:CollectionViewer}}, Path=ExitEditModeCommand}"
                        Template="{StaticResource PathButton}">
                    <Path Data="{StaticResource close }"
                          Stroke="Red" />
                </Button>
            </StackPanel>

        </Grid>
    </DataTemplate>
</ResourceDictionary>